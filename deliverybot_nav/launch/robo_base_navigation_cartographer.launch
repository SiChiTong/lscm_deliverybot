<launch>
  <!-- Arguments -->
  <arg name="model" default="robot_event_cam"/>

  <arg name="sim" default="true"/>
  <arg name="map_file" value="$(find robo_base_navigation)/maps/lab.yaml" unless="$(arg sim)" />
  <arg name="map_file" value="$(find robo_base_slam)/maps/cartographer.yaml" if="$(arg sim)" />
  <!-- <arg name="map_file" default="$(find robo_base_navigation)/maps/robo9-office-3-map-edit.yaml"/> -->

  <arg name="open_rviz" default="true"/>
  <arg name="move_forward_only" default="false"/>
  <arg name="planner" default="turtle" doc="local planner [DWA, eband, teb, teb_omni, tut]"/>

  <!-- robo_base -->
  <include file="$(find robo_base_bringup)/launch/robo_base_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!-- AMCL -->
  <!-- <include file="$(find robo_base_navigation)/launch/amcl.launch"/> -->

  <!-- Cartographer localization -->
  <include file="$(find robo_base_slam)/launch/robo_base_cartographer_loc.launch" />

  <!-- move_base -->
  <include file="$(find robo_base_navigation)/launch/move_base_$(arg planner).launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>

  <!-- set initialpose -->
  <group if="$(arg sim)">
    <node name="set_initialpose" pkg="set_initialpose" type="set_initialpose.py" output="screen">
      <!-- [position, quaternion] -->
      <rosparam param="initialpose">[-2,1,0, 0,0,0,1]</rosparam>
    </node>
  </group>
  

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find robo_base_navigation)/rviz/$(arg planner).rviz"/>
  </group>
</launch>
